// <auto-generated />
using System;
using ErdToDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ErdToDatabase.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20241027143553_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ErdToDatabase.Models.Groups", b =>
                {
                    b.Property<int>("GroupsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupsId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupsId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Marks", b =>
                {
                    b.Property<int>("MarksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarksId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentsId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("MarksId");

                    b.HasIndex("StudentsId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Students", b =>
                {
                    b.Property<int>("StudentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentsId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectsId")
                        .HasColumnType("int");

                    b.HasKey("StudentsId");

                    b.HasIndex("GroupsId");

                    b.HasIndex("SubjectsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Subjects", b =>
                {
                    b.Property<int>("SubjectsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectsId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectsId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Teachers", b =>
                {
                    b.Property<int>("TeachersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachersId"));

                    b.Property<string>("TeacherFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeachersId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SubjectsTeachers", b =>
                {
                    b.Property<int>("SubjectsId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("SubjectsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("SubjectsTeachers");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Marks", b =>
                {
                    b.HasOne("ErdToDatabase.Models.Students", null)
                        .WithMany("Mark")
                        .HasForeignKey("StudentsId");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Students", b =>
                {
                    b.HasOne("ErdToDatabase.Models.Groups", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupsId");

                    b.HasOne("ErdToDatabase.Models.Subjects", null)
                        .WithMany("Students")
                        .HasForeignKey("SubjectsId");
                });

            modelBuilder.Entity("SubjectsTeachers", b =>
                {
                    b.HasOne("ErdToDatabase.Models.Subjects", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErdToDatabase.Models.Teachers", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ErdToDatabase.Models.Groups", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Students", b =>
                {
                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ErdToDatabase.Models.Subjects", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
